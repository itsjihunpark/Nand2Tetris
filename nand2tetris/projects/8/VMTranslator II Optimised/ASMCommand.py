C_FUNCTION = [
    "(functionName)",
    f"@0 // repeat for nVars",
    "D=A",
    "@SP", 
    "A=M", 
    "M=D", 
    "@SP", 
    "M=M+1"
]

C_CALL = [
    "@functionName$ret.call_count // push return label",
    "D=A",
    "@SP", 
    "A=M", 
    "M=D", 
    "@SP", 
    "M=M+1"
    "@LCL // push LCL pointer",
    "D=M",
    "@SP", 
    "A=M", 
    "M=D", 
    "@SP", 
    "M=M+1",
    "@ARG // push ARG pointer",
    "D=M",
    "@SP", 
    "A=M", 
    "M=D", 
    "@SP", 
    "M=M+1",
    "@THIS // push THIS pointer",
    "D=M",
    "@SP", 
    "A=M", 
    "M=D", 
    "@SP", 
    "M=M+1",
    "@THAT // push THAT pointer",
    "D=M",
    "@SP", 
    "A=M", 
    "M=D", 
    "@SP", 
    "M=M+1",
    "@SP // reposition ARG pointer to be SP - 5 - nArgs", 
    "D=M", 
    "@5", 
    "D=D-A", 
    "@nArgs",
    "D=D-A", 
    "@ARG", 
    "M=D", 
    "@SP // reposition LCL pointer to be that of SP",
    "D=M", 
    "@LCL",
    "M=D", 
    "@functionName // make jump",
    "0;JMP",
    "(functionName$ret.call_count)"
]


C_RETURN = [
    "@LCL //frame = LCL",
    "D=M",
    "@13 // frame",
    "M=D",
    "@5 //retAddr = frame-5",
    "D=A",
    "@13",
    "D=M-D // RAM address that has the return address (ROM)", 
    "A=D", 
    "D=M //return address itself",
    "@14 // retAddr",
    "M=D",
    "@SP // reposition return value to arg 0", 
    "M=M-1",
    "A=M",
    "D=M", 
    "@ARG",
    "A=M", 
    "M=D",
    "@ARG //SP = ARG+1", 
    "D=M", 
    "@SP", 
    "M=D+1",    
    "@13 //THAT = *frame-1",
    "D=M-1",
    "A=D",
    "D=M",
    "@THAT", 
    "M=D",
    "@13 //THIS = *frame-2",
    "D=M", 
    "@2",
    "D=D-A",
    "A=D",
    "D=M", 
    "@THIS", 
    "M=D",
    "@13 //ARG = *frame-3",
    "D=M", 
    "@3",
    "D=D-A",
    "A=D",
    "D=M",
    "@ARG", 
    "M=D",
    "@13 //LCL = *frame-4",
    "D=M", 
    "@4",
    "D=D-A", 
    "A=D",
    "D=M",
    "@LCL", 
    "M=D",
    "@14 //goto retAddr",
    "A=M",
    "0;JMP"
]

